---
- hosts: localhost
  name: Deploy the VCSA to an ESXi Host
  gather_facts: false
  vars: 
    esxi_username: 'root'
    esxi_password: 'DEVP@ssw0rd'
    pod_esxi_password: 'DEVP@ssw0rd'
    vcenter_hostname: '172.16.14.137'
    vcenter_password: 'DEVP@ssw0rd'
    vcsa_user: 'administrator@vsphere.local'
    vcsa_pw: 'DEVP@ssw0rd'
    net_prefix: '24'
    net_gateway: '172.16.14.254'
    dns_servers: '172.16.20.101'
    ntp_servers: '172.20.1.254'
    domain: 'thor.iws.navy.mil'
    searchpath: "thor.iws.navy.mil"
    datastore: 'sandbox'
    networks: 'Storage Controller Management Network'
    ubuntu_ova_name: jammy-server-cloudimg-amd64.ova
    ubuntu_ova_url: http://172.16.65.167/00-Software/utils/
    #vcsa_ova_file: '/var/jenkins_home/{{ vcsa_ova_name }}'
    ubuntu_ova_file: '/tmp/{{ ubuntu_ova_name }}'
    nfs_file_browser_url: "http://172.16.10.124:8005"
    nfs_file_browser_user: "admin"
    nfs_file_browser_password: "admin"
    nfs_file_url: '/api/raw/00-Software/utils/{{ vcsa_ova_name }}'

  tasks:
#  - name: Creating a Directory to mount the NFS Storage
#    become: true
#    file:
#      path: /var/jenkins_home/iso
#      state: directory
#      mode: 0777

  - name: Authenticate to the nfs file browser
    uri:
      url: '{{ nfs_file_browser_url }}/api/login'
      method: POST
      body_format: json
      body: '{"username":"{{ nfs_file_browser_user }}","password":"{{ nfs_file_browser_password }}","recaptcha":""}'
      headers:
        Content-Type: "application/json"
        Accept: "application/json"
      return_content: yes
      validate_certs: no
      status_code: 200, -1
    register: auth_res

  - name: Download the file
    get_url:
      url: '{{ nfs_file_browser_url }}/api/raw/00-Software/utils/{{ ubuntu_ova_name }}?auth={{ auth_res.content  }}'
      #dest: '/var/jenkins_home/{{ vcsa_ova_name }}'
      dest: '/tmp/{{ ubuntu_ova_name }}'

  - vmware_deploy_ovf:
      #hostname: '{{ item.vcsaHost }}'
      hostname: "172.16.115.12"
      username: '{{ esxi_username }}'
      password: '{{ esxi_password }}'
      #name: '{{ vcenter_hostname }}'
      name: "tmpl_ubuntu" 
      ovf: '{{ ubuntu_ova_file }}' 
      wait_for_ip_address: false
      power_on: no
      validate_certs: no
      inject_ovf_env: false
      datastore: '{{ datastore }}'
      networks: "{u'Network 1':u'{{ networks }}'}"
    delegate_to: localhost

  - read_csv:
      path: ../$varPath/aci/tenant.csv
    register: tenantlist
    tags: canary

  - name: TASK - Clone Ubuntu Template
    community.vmware.vmware_guest:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcsa_user }}'
      password: '{{ vcsa_pw }}'
      validate_certs: no
      template: "tmpl_ubuntu"
      name: 'ubuntu-{{ vms.epg }}'
      folder: /
      datacenter: "sandbox"
      cluster: "sandbox"
      networks:
        - name: "{{ vms.tenant }}|{{ vms.appProfile }}|{{ vms.epg }}"
          type: dhcp
          connected: yes
          start_connected: yes
      state: poweredon
    loop: "{{ tenantlist.list }}"
    loop_control:
        loop_var: vms
    when: (vms.domainType == "vmm" and vms.dhcpRelay != "NA")
    delegate_to: localhost

  - name: TASK - Gather VM IP
    vmware_guest_info:
      hostname: '{{ vcenter_hostname }}'
      username: '{{ vcsa_user }}'
      password: '{{ vcsa_pw }}'
      validate_certs: no
      schema: vsphere
      datacenter: "sandbox"
      folder: /
      name: 'ubuntu-{{ vms.epg }}'
      properties:
        - guest.ipAddress
    retries: 60
    delay: 10
    until: gather_vm_info.instance.guest.ipAddress is not none
    register: gather_vm_info
    loop: "{{ tenantlist.list }}"
    loop_control:
        loop_var: vms
    when: (vms.domainType == "vmm" and vms.dhcpRelay != "NA")
    delegate_to: localhost

  - debug: var=gather_vm_info